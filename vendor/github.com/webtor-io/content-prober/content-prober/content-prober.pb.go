// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content-prober.proto

package content_prober

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Media stream
type Stream struct {
	Index                int32             `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	CodecName            string            `protobuf:"bytes,2,opt,name=codec_name,json=codecName,proto3" json:"codec_name,omitempty"`
	CodecType            string            `protobuf:"bytes,3,opt,name=codec_type,json=codecType,proto3" json:"codec_type,omitempty"`
	Width                int32             `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32             `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	BitRate              string            `protobuf:"bytes,6,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	Duration             string            `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Channels             int32             `protobuf:"varint,8,opt,name=channels,proto3" json:"channels,omitempty"`
	ChannelLayout        string            `protobuf:"bytes,9,opt,name=channel_layout,json=channelLayout,proto3" json:"channel_layout,omitempty"`
	SampleRate           string            `protobuf:"bytes,10,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_prober_4489897b6f7ec94e, []int{0}
}
func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (dst *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(dst, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Stream) GetCodecName() string {
	if m != nil {
		return m.CodecName
	}
	return ""
}

func (m *Stream) GetCodecType() string {
	if m != nil {
		return m.CodecType
	}
	return ""
}

func (m *Stream) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Stream) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Stream) GetBitRate() string {
	if m != nil {
		return m.BitRate
	}
	return ""
}

func (m *Stream) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Stream) GetChannels() int32 {
	if m != nil {
		return m.Channels
	}
	return 0
}

func (m *Stream) GetChannelLayout() string {
	if m != nil {
		return m.ChannelLayout
	}
	return ""
}

func (m *Stream) GetSampleRate() string {
	if m != nil {
		return m.SampleRate
	}
	return ""
}

func (m *Stream) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// Media format
type Format struct {
	FormatName           string            `protobuf:"bytes,1,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	BitRate              string            `protobuf:"bytes,2,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	Duration             string            `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Format) Reset()         { *m = Format{} }
func (m *Format) String() string { return proto.CompactTextString(m) }
func (*Format) ProtoMessage()    {}
func (*Format) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_prober_4489897b6f7ec94e, []int{1}
}
func (m *Format) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Format.Unmarshal(m, b)
}
func (m *Format) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Format.Marshal(b, m, deterministic)
}
func (dst *Format) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Format.Merge(dst, src)
}
func (m *Format) XXX_Size() int {
	return xxx_messageInfo_Format.Size(m)
}
func (m *Format) XXX_DiscardUnknown() {
	xxx_messageInfo_Format.DiscardUnknown(m)
}

var xxx_messageInfo_Format proto.InternalMessageInfo

func (m *Format) GetFormatName() string {
	if m != nil {
		return m.FormatName
	}
	return ""
}

func (m *Format) GetBitRate() string {
	if m != nil {
		return m.BitRate
	}
	return ""
}

func (m *Format) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Format) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

// The probe request message
type ProbeRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProbeRequest) Reset()         { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()    {}
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_prober_4489897b6f7ec94e, []int{2}
}
func (m *ProbeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeRequest.Unmarshal(m, b)
}
func (m *ProbeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeRequest.Marshal(b, m, deterministic)
}
func (dst *ProbeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeRequest.Merge(dst, src)
}
func (m *ProbeRequest) XXX_Size() int {
	return xxx_messageInfo_ProbeRequest.Size(m)
}
func (m *ProbeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeRequest proto.InternalMessageInfo

func (m *ProbeRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// The probe response message
type ProbeReply struct {
	Format               *Format   `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	Streams              []*Stream `protobuf:"bytes,2,rep,name=streams,proto3" json:"streams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProbeReply) Reset()         { *m = ProbeReply{} }
func (m *ProbeReply) String() string { return proto.CompactTextString(m) }
func (*ProbeReply) ProtoMessage()    {}
func (*ProbeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_content_prober_4489897b6f7ec94e, []int{3}
}
func (m *ProbeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeReply.Unmarshal(m, b)
}
func (m *ProbeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeReply.Marshal(b, m, deterministic)
}
func (dst *ProbeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeReply.Merge(dst, src)
}
func (m *ProbeReply) XXX_Size() int {
	return xxx_messageInfo_ProbeReply.Size(m)
}
func (m *ProbeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeReply proto.InternalMessageInfo

func (m *ProbeReply) GetFormat() *Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *ProbeReply) GetStreams() []*Stream {
	if m != nil {
		return m.Streams
	}
	return nil
}

func init() {
	proto.RegisterType((*Stream)(nil), "Stream")
	proto.RegisterMapType((map[string]string)(nil), "Stream.TagsEntry")
	proto.RegisterType((*Format)(nil), "Format")
	proto.RegisterMapType((map[string]string)(nil), "Format.TagsEntry")
	proto.RegisterType((*ProbeRequest)(nil), "ProbeRequest")
	proto.RegisterType((*ProbeReply)(nil), "ProbeReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentProberClient is the client API for ContentProber service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentProberClient interface {
	// Gets information about media content
	Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeReply, error)
}

type contentProberClient struct {
	cc *grpc.ClientConn
}

func NewContentProberClient(cc *grpc.ClientConn) ContentProberClient {
	return &contentProberClient{cc}
}

func (c *contentProberClient) Probe(ctx context.Context, in *ProbeRequest, opts ...grpc.CallOption) (*ProbeReply, error) {
	out := new(ProbeReply)
	err := c.cc.Invoke(ctx, "/ContentProber/Probe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentProberServer is the server API for ContentProber service.
type ContentProberServer interface {
	// Gets information about media content
	Probe(context.Context, *ProbeRequest) (*ProbeReply, error)
}

func RegisterContentProberServer(s *grpc.Server, srv ContentProberServer) {
	s.RegisterService(&_ContentProber_serviceDesc, srv)
}

func _ContentProber_Probe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProbeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentProberServer).Probe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ContentProber/Probe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentProberServer).Probe(ctx, req.(*ProbeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentProber_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ContentProber",
	HandlerType: (*ContentProberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Probe",
			Handler:    _ContentProber_Probe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "content-prober.proto",
}

func init() {
	proto.RegisterFile("content-prober.proto", fileDescriptor_content_prober_4489897b6f7ec94e)
}

var fileDescriptor_content_prober_4489897b6f7ec94e = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0xaa, 0xd3, 0x40,
	0x14, 0xc6, 0x4d, 0xd3, 0x26, 0xcd, 0x89, 0x15, 0x1d, 0x2e, 0x32, 0x16, 0xe4, 0xd6, 0x42, 0xa1,
	0x1b, 0xb3, 0xa8, 0xa0, 0xe2, 0x56, 0x74, 0x25, 0x72, 0x89, 0x77, 0x5f, 0xa6, 0xed, 0xb1, 0x0d,
	0x26, 0x33, 0x71, 0x72, 0xa2, 0xe6, 0x01, 0x7c, 0x2f, 0x1f, 0x4d, 0x72, 0x66, 0xd2, 0x5b, 0x04,
	0x77, 0x77, 0x77, 0xbe, 0xef, 0xcc, 0xf9, 0xf7, 0x63, 0xe0, 0x6a, 0x6f, 0x34, 0xa1, 0xa6, 0x97,
	0xb5, 0x35, 0x3b, 0xb4, 0x59, 0x6d, 0x0d, 0x99, 0xe5, 0xef, 0x10, 0xa2, 0x2f, 0x64, 0x51, 0x55,
	0xe2, 0x0a, 0x26, 0x85, 0x3e, 0xe0, 0x2f, 0x19, 0x2c, 0x82, 0xf5, 0x24, 0x77, 0x42, 0x3c, 0x07,
	0xd8, 0x9b, 0x03, 0xee, 0xb7, 0x5a, 0x55, 0x28, 0x47, 0x8b, 0x60, 0x9d, 0xe4, 0x09, 0x3b, 0x9f,
	0x55, 0x85, 0x77, 0x69, 0xea, 0x6a, 0x94, 0xe1, 0x45, 0xfa, 0xb6, 0xab, 0xb1, 0xef, 0xf9, 0xb3,
	0x38, 0xd0, 0x49, 0x8e, 0x5d, 0x4f, 0x16, 0xe2, 0x29, 0x44, 0x27, 0x2c, 0x8e, 0x27, 0x92, 0x13,
	0xb6, 0xbd, 0x12, 0xcf, 0x60, 0xba, 0x2b, 0x68, 0x6b, 0x15, 0xa1, 0x8c, 0xb8, 0x55, 0xbc, 0x2b,
	0x28, 0x57, 0x84, 0x62, 0x0e, 0xd3, 0x43, 0x6b, 0x15, 0x15, 0x46, 0xcb, 0x98, 0x53, 0x67, 0xdd,
	0xe7, 0xf6, 0x27, 0xa5, 0x35, 0x96, 0x8d, 0x9c, 0x72, 0xc3, 0xb3, 0x16, 0x2b, 0x78, 0xe4, 0xe3,
	0x6d, 0xa9, 0x3a, 0xd3, 0x92, 0x4c, 0xb8, 0x7a, 0xe6, 0xdd, 0x4f, 0x6c, 0x8a, 0x6b, 0x48, 0x1b,
	0x55, 0xd5, 0x25, 0xba, 0xe1, 0xc0, 0x6f, 0xc0, 0x59, 0x3c, 0x7f, 0x05, 0x63, 0x52, 0xc7, 0x46,
	0xa6, 0x8b, 0x70, 0x9d, 0x6e, 0x9e, 0x64, 0x8e, 0x59, 0x76, 0xab, 0x8e, 0xcd, 0x07, 0x4d, 0xb6,
	0xcb, 0x39, 0x3d, 0x7f, 0x03, 0xc9, 0xd9, 0x12, 0x8f, 0x21, 0xfc, 0x86, 0x1d, 0xe3, 0x4c, 0xf2,
	0x3e, 0xec, 0x71, 0xfc, 0x50, 0x65, 0x3b, 0x70, 0x74, 0xe2, 0xdd, 0xe8, 0x6d, 0xb0, 0xfc, 0x13,
	0x40, 0xf4, 0xd1, 0xd8, 0x4a, 0xf1, 0x2e, 0x5f, 0x39, 0x72, 0xc8, 0x5d, 0x39, 0x38, 0x8b, 0x99,
	0x5f, 0x62, 0x1a, 0xfd, 0x1f, 0x53, 0xf8, 0x0f, 0xa6, 0xe1, 0x84, 0xb1, 0x3f, 0xc1, 0x8d, 0xbb,
	0xbf, 0x13, 0x16, 0xf0, 0xf0, 0xa6, 0xff, 0x5a, 0x39, 0x7e, 0x6f, 0xb1, 0xa1, 0xbe, 0xb6, 0xb5,
	0xe5, 0x50, 0xdb, 0xda, 0x72, 0x79, 0x03, 0xe0, 0x5f, 0xd4, 0x65, 0x27, 0xae, 0x21, 0x72, 0x47,
	0xf1, 0x93, 0x74, 0x13, 0xfb, 0x8d, 0x72, 0x6f, 0x8b, 0x17, 0x10, 0x37, 0x8c, 0xb9, 0x91, 0x23,
	0xde, 0x39, 0xf6, 0xd8, 0xf3, 0xc1, 0xdf, 0xbc, 0x86, 0xd9, 0x7b, 0xf7, 0xad, 0xb9, 0xb1, 0x15,
	0x2b, 0x98, 0x70, 0x24, 0x66, 0xd9, 0xe5, 0x32, 0xf3, 0x34, 0xbb, 0x9b, 0xbc, 0x7c, 0xb0, 0x8b,
	0xf8, 0xf7, 0xbf, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x15, 0xbf, 0x67, 0x31, 0x15, 0x03, 0x00,
	0x00,
}
